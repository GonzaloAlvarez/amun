#!/bin/bash
''':'
# vim: set filetype=python :
for name in python3 python; do
    if type "$name" >/dev/null 2>&1; then
        [[ -f "$0" ]] && exec "$name" "$0" "$@"
        [[ -t 0 ]] && cat <"$0" > "$HOME/.bt" || cat > "$HOME/.bt"
        { printf "\'\'\'\n" ; cat "$HOME/.bt"; } > "$HOME/.bootstrap" && rm -f "$HOME/.bt"
        exec "$name" "$HOME/.bootstrap" "$@"
    fi
done
echo "Please install python"
exit 1
':'''

import os, sys, subprocess, socket, shutil, pathlib
from urllib.request import urlretrieve

in_venv = (hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix))
try:
    socket.create_connection(("8.8.8.8", 53), 2)
except:
    raise Exception("I couldn't reach internet. I need to bail out")
if not in_venv:
    print('Retrieving virtualenv...')
    urlretrieve("https://bootstrap.pypa.io/virtualenv.pyz", "virtualenv.pyz")
    subprocess.run(f'{sys.executable} virtualenv.pyz .venv', shell=True, check=True)
    os.remove('virtualenv.pyz')

    subprocess.run(f'.venv/bin/python -m pip install --upgrade pip setuptools wheel paramiko', shell=True, check=True)
    subprocess.run(f'.venv/bin/python -m pip install dulwich --config-settings "--build-option=--pure"', shell=True, check=True)
    subprocess.run(f'.venv/bin/python -m pip install --upgrade ansible', shell=True, check=True)
    os.execv('.venv/bin/python', ['.venv/bin/python'] + sys.argv)
    sys.exit(0) # should never ever reach here...

import dulwich.porcelain

provisioning_folder = pathlib.Path.home() / ".provisioning"
repo_folder = os.getenv('AMUN_REPO')
if repo_folder is None:
    print('Cloning remote repository')
    dulwich.porcelain.clone("https://github.com/GonzaloAlvarez/amun.git", provisioning_folder)
else:
    repo_path = pathlib.Path(repo_folder)
    if repo_path.exists() and repo_path.is_dir():
        print('Copying local folder (test environment)')
        shutil.copytree(repo_folder, provisioning_folder)

base_path = os.getcwd()
os.chdir((provisioning_folder))
subprocess.run(f'{base_path}/.venv/bin/ansible-galaxy install -r requirements.yml', shell=True, check=True)
ask_sudo="-K"
try:
    subprocess.run(['sudo', '-n', 'uptime'], check=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
    ask_sudo=""
except:
    pass
subprocess.run(f'{base_path}/.venv/bin/ansible-playbook {ask_sudo} -i localhost --connection=local --limit 127.0.0.1 main.yml', shell=True, check=True)

os.chdir(base_path)
if repo_folder is None:
    if os.path.exists('.provisioning') and os.path.isdir('.provisioning'):
        shutil.rmtree('.provisioning')
    if os.path.exists('.venv') and os.path.isdir('.venv'):
        shutil.rmtree('.venv')
